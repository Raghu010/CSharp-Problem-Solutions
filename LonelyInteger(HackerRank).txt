using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'lonelyinteger' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int lonelyinteger(List<int> a)
    {
        int result = 0;
        Dictionary<int, int> dict = new Dictionary<int, int>();

        for (int i = 0; i < a.Count; i++)
        {
            int count = 1;
            for (int j = 0; j < a.Count; j++)
            {
                if (i == j)
                {
                    continue;
                }
                else if (a[i] == a[j])
                {
                    count = count + 1;
                    dict[count] = a[j];
                }
            }
            dict[count] = a[i];
        }

        foreach (var kvp in dict)
        {
            if (kvp.Key == 1)
            {
                result = kvp.Value;
            }
        }
        return result;
    }
}

class Solution
{
    public static void Main(string[] args)
    {

        List<int> a = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(aTemp => Convert.ToInt32(aTemp)).ToList();

        int result = Result.lonelyinteger(a);
        Console.WriteLine(result);
        Console.ReadKey();
    }
}
