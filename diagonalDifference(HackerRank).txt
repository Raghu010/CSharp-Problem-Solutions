using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'diagonalDifference' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY arr as parameter.
     */

    //Problem statement: Absolute difference between the sum of left and right diagonal in an n*n matrix.
    public static int diagonalDifference(List<List<int>> arr)
    {
        int result = 0;
        int leftDiagonal = 0;
        int rightDiagonal = 0;

        for (int i = 0; i < arr.Count; i++) 
        {
            for(int j = 0;  j < arr[i].Count; j++)
            {
                if(i == j)
                {
                    leftDiagonal += arr[i][j];
                }
                if (i+j == arr.Count-1)
                {
                    rightDiagonal += arr[i][j];
                }
            }
        }

        if (leftDiagonal > rightDiagonal)
        {
            result = leftDiagonal - rightDiagonal;
        }
        else if (rightDiagonal > leftDiagonal) 
        {
            result = rightDiagonal - leftDiagonal;
        }
        else
        {
            result = 0;
        }
        return result;
    }

}

class Solution
{
    public static void Main(string[] args)
    {

        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<List<int>> arr = new List<List<int>>();

        for (int i = 0; i < n; i++)
        {
            arr.Add(Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList());
        }

        int result = Result.diagonalDifference(arr);
        Console.WriteLine(result);
        Console.ReadKey();
    }
}
